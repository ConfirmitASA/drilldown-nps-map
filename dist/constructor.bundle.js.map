{"version":3,"sources":["webpack:///constructor.bundle.js","webpack:///webpack/bootstrap 0de48b94bf04419c00da?2220","webpack:///./src/constructor/maps-constructor.js","webpack:///./~/r-reportal-base/src/reportal-base.js?da35"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_rReportalBase","_rReportalBase2","MapsConstructor","_this","this","promiseRequest","then","cfg","config","JSON","parse","hm","constructor","stubHighcharts","mapsSelector","document","querySelector","mapsList","countriesList","countriesFilter","mapsFilter","processMap","bind","addEventListener","e","copyIDsToClipboard","createMapSwitcher","initFiltering","filters","targets","forEach","filter","index","nodeName","slice","querySelectorAll","el","parent","parentNode","textContent","toLowerCase","indexOf","style","display","_this2","select","section","option","createElement","title","appendChild","loadMapsSection","sectionIndex","_this3","currentSection","clearMapsList","maps","map","li","createRadio","createLink","label","radio","type","name","l","insertBefore","firstChild","property","arguments","undefined","prop","link","href","multiselect","checked","btn","tr","_this4","oMap","fakeXHR","js","mapJSON","clearCountriesList","updateCodebox","getMapID","buildCountriesList","onclick","displayMultiselect","df","createDocumentFragment","features","feature","properties","row","cb","copyTextEventHandler","innerHTML","url","_this5","mapID","Promise","resolve","reject","getContents","script","removeEventListener","head","removeChild","src","_this6","children","window","Highcharts","ids","push","t","stringify","text","tooltip","body","left","pageX","top","pageY","opacity","setTimeout","remove","event","range","createRange","node","getSelection","removeAllRanges","getElementById","selectNode","addRange","successful","execCommand","msg","showTooltip","err","console","log","codebox","tag","split","Reportal","mixin","1","ReportalBase","source","level","args","Array","isArray","apply","_logger","createEvent","initEvent","str","isNaN","parseFloat","replace","URL","xhr","XMLHttpRequest","open","onload","status","responseText","Error","statusText","onerror","send","variable","query","location","search","substring","vars","pair","18"],"mappings":"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","file":"constructor.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _rReportalBase = __webpack_require__(1);\n\t\n\tvar _rReportalBase2 = _interopRequireDefault(_rReportalBase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Created by IvanP on 30.12.2016.\n\t */\n\t__webpack_require__(18);\n\t\n\tvar MapsConstructor = function () {\n\t  function MapsConstructor() {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, MapsConstructor);\n\t\n\t    return _rReportalBase2.default.promiseRequest(\"maps.json\").then(function (cfg) {\n\t      _this.config = JSON.parse(cfg);\n\t      _this.hm = _this.constructor.stubHighcharts();\n\t      _this.mapsSelector = document.querySelector(\"#mapsSectionSelector\");\n\t      _this.mapsList = document.querySelector(\"#mapsList\");\n\t      _this.countriesList = document.querySelector(\"#countriesList\");\n\t      _this.countriesFilter = document.querySelector(\"#countriesFilter\");\n\t      _this.mapsFilter = document.querySelector(\"#mapsFilter\");\n\t      _this.processMap = _this.processMap.bind(_this);\n\t      document.querySelector('#btn-getIDs').addEventListener('click', function (e) {\n\t        MapsConstructor.copyIDsToClipboard(e, 'IDsStorage');\n\t      });\n\t      _this.createMapSwitcher();\n\t      _this.initFiltering();\n\t    });\n\t  }\n\t\n\t  _createClass(MapsConstructor, [{\n\t    key: \"initFiltering\",\n\t\n\t\n\t    /**\n\t     * Sets up simple filtering matching all matches on keystroke and clear\n\t     * */\n\t    value: function initFiltering() {\n\t      var filters = [this.countriesFilter, this.mapsFilter];\n\t      var targets = [this.countriesList, this.mapsList];\n\t      filters.forEach(function (filter, index) {\n\t        filter.addEventListener('input', function (e) {\n\t          var value = e.target.value;\n\t          var target = targets[index];\n\t          if (target.nodeName == \"TABLE\") {\n\t            [].slice.call(target.querySelectorAll(\"tbody>tr>td:nth-child(1)\")).forEach(function (el) {\n\t              var parent = el.parentNode;\n\t              if (el.textContent.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n\t                parent.style.display = \"table-row\";\n\t              } else {\n\t                parent.style.display = \"none\";\n\t              }\n\t            });\n\t          }\n\t          if (target.nodeName == \"UL\") {\n\t            [].slice.call(target.querySelectorAll(\"li\")).forEach(function (el) {\n\t              if (el.textContent.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n\t                el.style.display = \"block\";\n\t              } else {\n\t                el.style.display = \"none\";\n\t              }\n\t            });\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"createMapSwitcher\",\n\t\n\t\n\t    /**\n\t     * creates a dropdown that switches maps\n\t     *\n\t     */\n\t    value: function createMapSwitcher() {\n\t      var _this2 = this;\n\t\n\t      var select = document.querySelector(\"#mapsSectionSelector\");\n\t      this.config.forEach(function (section, index) {\n\t        var option = document.createElement('option');\n\t        option.value = index;\n\t        option.textContent = section.title;\n\t        _this2.mapsSelector.appendChild(option);\n\t      });\n\t      this.mapsSelector.addEventListener('change', function (e) {\n\t        _this2.loadMapsSection(select.value);\n\t      });\n\t      this.loadMapsSection(0);\n\t    }\n\t\n\t    /**\n\t     * loads a map section\n\t     * */\n\t\n\t  }, {\n\t    key: \"loadMapsSection\",\n\t    value: function loadMapsSection(sectionIndex) {\n\t      var _this3 = this;\n\t\n\t      this.currentSection = this.config[sectionIndex];\n\t      this.clearMapsList();\n\t      this.currentSection.maps.forEach(function (map, i) {\n\t        var li = MapsConstructor.createElement('li');\n\t        li.appendChild(_this3.createRadio(i, map.title));\n\t        li.appendChild(_this3.createLink(i, 'demo'));\n\t        _this3.mapsList.appendChild(li);\n\t      });\n\t    }\n\t  }, {\n\t    key: \"createRadio\",\n\t    value: function createRadio(index, label) {\n\t      var radio = document.createElement('input');\n\t      radio.type = \"radio\";\n\t      radio.name = \"map\";\n\t      radio.value = index;\n\t      var l = this.constructor.createElement('label', label);\n\t      l.insertBefore(radio, l.firstChild);\n\t      radio.addEventListener('change', this.processMap);\n\t      return l;\n\t    }\n\t  }, {\n\t    key: \"createLink\",\n\t    value: function createLink(index, property) {\n\t      var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"_blank\";\n\t\n\t      var prop = this.currentSection.maps[index][property],\n\t          link = MapsConstructor.createElement('a', prop.title);\n\t      link.href = prop.href;\n\t      link.target = target;\n\t      return link;\n\t    }\n\t\n\t    /**\n\t     * Copies selected countries IDs\n\t     * @param e - click event\n\t     */\n\t\n\t  }, {\n\t    key: \"displayMultiselect\",\n\t    value: function displayMultiselect(multiselect) {\n\t      multiselect.style.display = 'block';\n\t      multiselect.querySelector('#multiSelectCheckbox').checked = false;\n\t      multiselect.querySelectorAll('button').forEach(function (btn) {\n\t        return btn.style.display = 'none';\n\t      });\n\t      multiselect.querySelector('#multiSelectCheckbox').addEventListener('change', function () {\n\t        if (this.checked) {\n\t          multiselect.querySelectorAll('button').forEach(function (btn) {\n\t            return btn.style.display = 'inline-block';\n\t          });\n\t          document.querySelectorAll('#countriesList tbody tr').forEach(function (tr) {\n\t            tr.querySelector(\"input[type='checkbox']\").style.display = 'table-cell';\n\t          });\n\t        } else {\n\t          multiselect.querySelectorAll('button').forEach(function (btn) {\n\t            return btn.style.display = 'none';\n\t          });\n\t          document.querySelectorAll('#countriesList tbody tr').forEach(function (tr) {\n\t            tr.querySelector(\"input[type='checkbox']\").style.display = 'none';\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: \"processMap\",\n\t    value: function processMap(e) {\n\t      var _this4 = this;\n\t\n\t      var map = this.currentSection.maps[e.target.value];\n\t      var oMap = this.fakeXHR(map.js.href);\n\t      oMap.then(function (mapJSON) {\n\t        _this4.clearCountriesList();\n\t        _this4.constructor.updateCodebox(_this4.constructor.getMapID(map.js.href));\n\t        _this4.buildCountriesList(mapJSON);\n\t        document.querySelector('#btn-deselect').onclick = function () {\n\t          document.querySelectorAll('#countriesList tbody tr').forEach(function (tr) {\n\t            tr.querySelector(\"input[type='checkbox']\").checked = false;\n\t          });\n\t        };\n\t        _this4.displayMultiselect(document.querySelector('#multiSelect'));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Shows tooltip when, when text is copied to clipboard\n\t     * @param e\n\t     * @param text\n\t     */\n\t\n\t  }, {\n\t    key: \"buildCountriesList\",\n\t    value: function buildCountriesList(map) {\n\t      var df = document.createDocumentFragment();\n\t      map.features.forEach(function (feature) {\n\t        var p = feature.properties,\n\t            row = MapsConstructor.createElement('tr');\n\t        df.appendChild(row);\n\t        var cb = document.createElement('input');\n\t        cb.type = 'checkbox';\n\t        cb.value = p['hc-key'];\n\t        cb.style.display = 'none';\n\t        row.appendChild(MapsConstructor.createElement('td', p['name']));\n\t        row.firstChild.insertBefore(cb, row.firstChild.firstChild);\n\t        var key = MapsConstructor.createElement('td', p['hc-key']);\n\t        row.appendChild(key);\n\t        key.addEventListener('click', MapsConstructor.copyTextEventHandler);\n\t        row.appendChild(MapsConstructor.createElement('td', p['subregion']));\n\t        row.appendChild(MapsConstructor.createElement('td', p['region-wb']));\n\t      });\n\t      this.countriesList.querySelector('tbody').appendChild(df);\n\t    }\n\t  }, {\n\t    key: \"clearCountriesList\",\n\t    value: function clearCountriesList() {\n\t      this.countriesList.querySelector('tbody').innerHTML = '';\n\t    }\n\t  }, {\n\t    key: \"fakeXHR\",\n\t    value: function fakeXHR(url) {\n\t      var _this5 = this;\n\t\n\t      var mapID = this.constructor.getMapID(url),\n\t          hm = this.hm;\n\t      return new Promise(function (resolve, reject) {\n\t        if (!_this5.hm[mapID]) {\n\t          (function () {\n\t            var getContents = function getContents(e) {\n\t              script.removeEventListener('load', getContents);\n\t              head.removeChild(script);\n\t              resolve(hm[mapID]);\n\t            };\n\t\n\t            var script = document.createElement('script'),\n\t                head = document.querySelector('head');\n\t            script.addEventListener('load', getContents);\n\t\n\t            script.src = url;\n\t            head.appendChild(script);\n\t          })();\n\t        } else {\n\t          resolve(hm[mapID]);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: \"clearMapsList\",\n\t    value: function clearMapsList() {\n\t      var _this6 = this;\n\t\n\t      if (this.mapsList.children.length > 0) {\n\t        [].slice.call(this.mapsList.querySelectorAll('input[type=radio]')).forEach(function (cb) {\n\t          return cb.removeEventListener('change', _this6.processMap);\n\t        });\n\t        this.mapsList.innerHTML = '';\n\t      }\n\t    }\n\t  }], [{\n\t    key: \"stubHighcharts\",\n\t    value: function stubHighcharts() {\n\t      if (!window.Highcharts) {\n\t        window.Highcharts = { maps: {} };\n\t      } else if (!window.Highcharts.maps) {\n\t        window.Highcharts.maps = {};\n\t      }\n\t      return window.Highcharts.maps;\n\t    }\n\t  }, {\n\t    key: \"copyIDsToClipboard\",\n\t    value: function copyIDsToClipboard(e) {\n\t      var ids = [];\n\t      document.querySelectorAll('#countriesList tbody tr').forEach(function (tr) {\n\t        var cb = tr.querySelector(\"input[type='checkbox']\");\n\t        if (cb.checked) {\n\t          ids.push(cb.value);\n\t        }\n\t      });\n\t      if (ids.length < 1) return;\n\t      var t = document.querySelector('#IDsStorage');\n\t      t.value = JSON.stringify(ids);\n\t      t.style.display = \"block\";\n\t      MapsConstructor.copyTextEventHandler(e, 'IDsStorage');\n\t      t.style.display = \"none\";\n\t    }\n\t  }, {\n\t    key: \"showTooltip\",\n\t    value: function showTooltip(e, text) {\n\t      var tooltip = document.createElement('div');\n\t      tooltip.innerHTML = text;\n\t      tooltip.id = 'tooltip';\n\t      document.body.appendChild(tooltip);\n\t      tooltip.style.left = e.pageX - 10 + 'px';\n\t      tooltip.style.top = e.pageY + 15 + 'px';\n\t      tooltip.style.opacity = 1;\n\t      setTimeout(function () {\n\t        tooltip.style.opacity = 0;\n\t        tooltip.remove();\n\t      }, 500);\n\t    }\n\t\n\t    /**\n\t     * Copies text to clipboard\n\t     * @param event\n\t     * @param id\n\t     */\n\t\n\t  }, {\n\t    key: \"copyTextEventHandler\",\n\t    value: function copyTextEventHandler(event, id) {\n\t      var range = document.createRange();\n\t      var node = void 0;\n\t      window.getSelection().removeAllRanges();\n\t      if (id) {\n\t        node = document.getElementById(id);\n\t      } else {\n\t        node = event.target;\n\t      }\n\t      range.selectNode(node);\n\t      window.getSelection().addRange(range);\n\t      try {\n\t        var successful = document.execCommand('copy');\n\t        var msg = successful ? 'successful' : 'unsuccessful';\n\t        if (msg) {\n\t          MapsConstructor.showTooltip(event, \"Copied to clipboard!\");\n\t        } else {\n\t          MapsConstructor.showTooltip(event, \"Copy failed!\");\n\t        }\n\t      } catch (err) {\n\t        console.log(err);\n\t      }\n\t      window.getSelection().removeAllRanges();\n\t    }\n\t  }, {\n\t    key: \"updateCodebox\",\n\t    value: function updateCodebox(mapID) {\n\t      var codebox = document.querySelector('.codebox');\n\t      codebox.innerHTML = \"mapName: <span>\" + mapID + \"</span>\";\n\t      codebox.querySelector('span').addEventListener('click', MapsConstructor.copyTextEventHandler);\n\t    }\n\t  }, {\n\t    key: \"createElement\",\n\t    value: function createElement(tag, text) {\n\t      var el = document.createElement(tag);\n\t      if (text) {\n\t        el.textContent = text;\n\t      }\n\t      return el;\n\t    }\n\t  }, {\n\t    key: \"getMapID\",\n\t    value: function getMapID(href) {\n\t      return href.split(\"mapdata/\")[1].split('.')[0];\n\t    }\n\t  }]);\n\t\n\t  return MapsConstructor;\n\t}();\n\t\n\texports.default = MapsConstructor;\n\t\n\t\n\twindow.Reportal = window.Reportal || {};\n\t_rReportalBase2.default.mixin(window.Reportal, {\n\t  MapsConstructor: MapsConstructor\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ReportalBase = function () {\n\t  function ReportalBase() {\n\t    _classCallCheck(this, ReportalBase);\n\t  }\n\t\n\t  _createClass(ReportalBase, null, [{\n\t    key: 'mixin',\n\t\n\t\n\t    /**\n\t     * Copies props from a source object to a target object.\n\t     *\n\t     * Note, this method uses a simple `for...in` strategy for enumerating\n\t     * properties.  To ensure only `ownProperties` are copied from source\n\t     * to target and that accessor implementations are copied, use `extend`.\n\t     *\n\t     * @method mixin\n\t     * @param {Object} target Target object to copy properties to.\n\t     * @param {Object} source Source object to copy properties from.\n\t     * @return {Object} Target object that was passed as first argument.\n\t     */\n\t    value: function mixin(target, source) {\n\t      for (var i in source) {\n\t        target[i] = source[i];\n\t      }\n\t      return target;\n\t    }\n\t  }, {\n\t    key: '_logger',\n\t    value: function _logger(level, args) {\n\t      // accept ['foo', 'bar'] and [['foo', 'bar']]\n\t      if (args.length === 1 && Array.isArray(args[0])) {\n\t        args = args[0];\n\t      }\n\t      // only accept logging functions\n\t      switch (level) {\n\t        case 'log':\n\t        case 'warn':\n\t        case 'error':\n\t          console[level].apply(console, args);\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_log',\n\t    value: function _log() {\n\t      var args = Array.prototype.slice.call(arguments, 0);\n\t      this._logger('log', args);\n\t    }\n\t  }, {\n\t    key: '_warn',\n\t    value: function _warn() {\n\t      var args = Array.prototype.slice.call(arguments, 0);\n\t      this._logger('warn', args);\n\t    }\n\t  }, {\n\t    key: '_error',\n\t    value: function _error() {\n\t      var args = Array.prototype.slice.call(arguments, 0);\n\t      this._logger('error', args);\n\t    }\n\t\n\t    /**\n\t     * Creates a named event with `name`\n\t     * @param {String} name - name of the event\n\t     * @return {Event} Returns a created event\n\t     * */\n\t\n\t  }, {\n\t    key: 'newEvent',\n\t    value: function newEvent(name) {\n\t      var event = document.createEvent('Event');\n\t      event.initEvent(name, true, true);\n\t      return event;\n\t    }\n\t\n\t    /**\n\t     * Inspects if the current string might be converted to number and renders it as number. If string length is 0, returns `null`. If none applies returns the string as is.\n\t     * @param {String} str - value of the cell if not HTML contents\n\t     * @return {Number|null|String}\n\t     * */\n\t\n\t  }, {\n\t    key: 'isNumber',\n\t    value: function isNumber(str) {\n\t      if (!isNaN(parseFloat(str))) {\n\t        str = str.replace(/,/i, ''); // remove unnecessary comma as a delimiter for thousands from data.\n\t        return parseFloat(str);\n\t      } else if (str.length == 0) {\n\t        return null;\n\t      } else {\n\t        return str;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an XHR wrapped in a Promise\n\t     * @param {!String} URL - url to send a `GET` request to\n\t     * @return {Promise} Returns a then-able promise with `XMLHttpRequest.responseText`\n\t     * */\n\t\n\t  }, {\n\t    key: 'promiseRequest',\n\t    value: function promiseRequest(URL) {\n\t      return new Promise(function (resolve, reject) {\n\t        var xhr = new XMLHttpRequest();\n\t        xhr.open('GET', URL, true);\n\t        xhr.onload = function (e) {\n\t          xhr.status == 200 ? resolve(xhr.responseText) : reject(Error(xhr.status + ': ' + xhr.statusText));\n\t        };\n\t        xhr.onerror = function (e) {\n\t          reject(e);\n\t        };\n\t        xhr.send();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a variable listed in query string\n\t     * @param {!String} variable - variable name to get value for\n\t     * @param {String=} [query=window.location.search.substring(1)] - the query string to search variable for in\n\t     * @return {String} Returns value for the variable\n\t     * */\n\t\n\t  }, {\n\t    key: 'getQueryVariable',\n\t    value: function getQueryVariable(variable) {\n\t      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search.substring(1);\n\t\n\t      var vars = query.split(\"&\");\n\t      for (var i = 0; i < vars.length; i++) {\n\t        var pair = vars[i].split(\"=\");\n\t        if (pair[0].toLowerCase() == variable.toLowerCase()) {\n\t          return pair[1];\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return ReportalBase;\n\t}();\n\t\n\texports.default = ReportalBase;\n\tmodule.exports = exports['default'];\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// constructor.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0de48b94bf04419c00da","/**\n * Created by IvanP on 30.12.2016.\n */\nrequire('./styles.css');\nimport ReportalBase from \"r-reportal-base\";\n\nclass MapsConstructor{\n  constructor(){\n    return ReportalBase.promiseRequest(\"maps.json\").then(cfg=>{\n      this.config = JSON.parse(cfg);\n      this.hm = this.constructor.stubHighcharts();\n      this.mapsSelector = document.querySelector(\"#mapsSectionSelector\");\n      this.mapsList = document.querySelector(\"#mapsList\");\n      this.countriesList = document.querySelector(\"#countriesList\");\n      this.countriesFilter = document.querySelector(\"#countriesFilter\");\n      this.mapsFilter = document.querySelector(\"#mapsFilter\");\n      this.processMap = this.processMap.bind(this);\n      document.querySelector('#btn-getIDs').addEventListener('click', function(e){\n        MapsConstructor.copyIDsToClipboard(e, 'IDsStorage');\n      });\n      this.createMapSwitcher();\n      this.initFiltering();\n    });\n  }\n\n  static stubHighcharts(){\n    if(!window.Highcharts){\n      window.Highcharts = {maps:{}};\n    } else if(!window.Highcharts.maps){window.Highcharts.maps={}}\n    return window.Highcharts.maps\n  }\n\n  /**\n   * Sets up simple filtering matching all matches on keystroke and clear\n   * */\n  initFiltering(){\n    let filters = [this.countriesFilter,this.mapsFilter];\n    let targets = [this.countriesList, this.mapsList];\n    filters.forEach((filter,index)=>{\n      filter.addEventListener('input',e=>{\n        let value = e.target.value;\n        let target = targets[index];\n        if(target.nodeName==\"TABLE\"){\n          [].slice.call(target.querySelectorAll(\"tbody>tr>td:nth-child(1)\")).forEach(el=>{\n            let parent = el.parentNode;\n            if(el.textContent.toLowerCase().indexOf(value.toLowerCase())>-1){\n              parent.style.display=\"table-row\";\n            } else {\n              parent.style.display=\"none\";\n            }\n          })\n        }\n        if(target.nodeName==\"UL\"){\n          [].slice.call(target.querySelectorAll(\"li\")).forEach(el=>{\n            if(el.textContent.toLowerCase().indexOf(value.toLowerCase())>-1){\n              el.style.display=\"block\";\n            } else {\n              el.style.display=\"none\";\n            }\n          })\n        }\n      })\n    })\n  };\n\n  /**\n   * creates a dropdown that switches maps\n   *\n   */\n  createMapSwitcher(){\n    let select = document.querySelector(\"#mapsSectionSelector\");\n    this.config.forEach((section,index)=>{\n      let option = document.createElement('option');\n      option.value = index;\n      option.textContent = section.title;\n      this.mapsSelector.appendChild(option);\n    });\n    this.mapsSelector.addEventListener('change',e=>{\n      this.loadMapsSection(select.value);\n    });\n    this.loadMapsSection(0);\n  }\n\n  /**\n   * loads a map section\n   * */\n  loadMapsSection(sectionIndex){\n    this.currentSection = this.config[sectionIndex];\n    this.clearMapsList();\n    this.currentSection.maps.forEach((map,i)=>{\n      let li = MapsConstructor.createElement('li');\n      li.appendChild(this.createRadio(i,map.title));\n      li.appendChild(this.createLink(i,'demo'));\n      this.mapsList.appendChild(li);\n    })\n  }\n\n\n  createRadio(index,label){\n    let radio = document.createElement('input');\n    radio.type = \"radio\";\n    radio.name = \"map\";\n    radio.value = index;\n    let l = this.constructor.createElement('label',label);\n    l.insertBefore(radio,l.firstChild);\n    radio.addEventListener('change',this.processMap);\n    return l\n  }\n\n  createLink(index, property, target=\"_blank\"){\n    let prop = this.currentSection.maps[index][property],\n        link = MapsConstructor.createElement('a',prop.title);\n    link.href = prop.href;\n    link.target = target;\n    return link\n  }\n\n  /**\n   * Copies selected countries IDs\n   * @param e - click event\n   */\n  static copyIDsToClipboard(e){\n    let ids = [];\n    document.querySelectorAll('#countriesList tbody tr').forEach(tr => {\n      let cb = tr.querySelector(\"input[type='checkbox']\");\n      if(cb.checked){\n        ids.push(cb.value);\n      }\n    });\n    if(ids.length < 1)\n      return;\n    let t = document.querySelector('#IDsStorage');\n    t.value = JSON.stringify(ids);\n    t.style.display = \"block\";\n    MapsConstructor.copyTextEventHandler(e, 'IDsStorage');\n    t.style.display = \"none\";\n  }\n\n  displayMultiselect(multiselect){\n    multiselect.style.display = 'block';\n    multiselect.querySelector('#multiSelectCheckbox').checked = false;\n    multiselect.querySelectorAll('button').forEach(btn => btn.style.display = 'none');\n    multiselect.querySelector('#multiSelectCheckbox').addEventListener('change', function () {\n      if(this.checked){\n        multiselect.querySelectorAll('button').forEach(btn => btn.style.display = 'inline-block');\n        document.querySelectorAll('#countriesList tbody tr').forEach(tr => {\n          tr.querySelector(\"input[type='checkbox']\").style.display = 'table-cell';\n        });\n      } else {\n        multiselect.querySelectorAll('button').forEach(btn => btn.style.display = 'none');\n        document.querySelectorAll('#countriesList tbody tr').forEach(tr => {\n          tr.querySelector(\"input[type='checkbox']\").style.display = 'none';\n        });\n      }\n    });\n  }\n\n  processMap(e){\n    let map = this.currentSection.maps[e.target.value];\n    let oMap = this.fakeXHR(map.js.href);\n    oMap.then(mapJSON=>{\n      this.clearCountriesList();\n      this.constructor.updateCodebox(this.constructor.getMapID(map.js.href));\n      this.buildCountriesList(mapJSON);\n      document.querySelector('#btn-deselect').onclick = function () {\n        document.querySelectorAll('#countriesList tbody tr').forEach(tr => {\n          tr.querySelector(\"input[type='checkbox']\").checked = false;\n        });\n      };\n      this.displayMultiselect(document.querySelector('#multiSelect'));\n    });\n  }\n\n  /**\n   * Shows tooltip when, when text is copied to clipboard\n   * @param e\n   * @param text\n   */\n  static showTooltip(e, text){\n    let tooltip = document.createElement('div');\n    tooltip.innerHTML = text;\n    tooltip.id = 'tooltip';\n    document.body.appendChild(tooltip);\n    tooltip.style.left = e.pageX - 10 + 'px';\n    tooltip.style.top = e.pageY + 15 + 'px';\n    tooltip.style.opacity = 1;\n    setTimeout(function(){\n      tooltip.style.opacity = 0;\n      tooltip.remove();\n    }, 500)\n\n  }\n\n  /**\n   * Copies text to clipboard\n   * @param event\n   * @param id\n   */\n  static copyTextEventHandler(event, id){\n    let range = document.createRange();\n    let node;\n    window.getSelection().removeAllRanges();\n    if (id) {\n      node = document.getElementById(id);\n    }else{\n      node = event.target;\n    }\n    range.selectNode(node);\n    window.getSelection().addRange(range);\n    try {\n      let successful = document.execCommand('copy');\n      let msg = successful ? 'successful' : 'unsuccessful';\n      if (msg) {\n        MapsConstructor.showTooltip(event, \"Copied to clipboard!\");\n      } else {\n        MapsConstructor.showTooltip(event, \"Copy failed!\");\n      }\n    } catch(err) {\n      console.log(err);\n    }\n    window.getSelection().removeAllRanges();\n  }\n\n  static updateCodebox(mapID) {\n    let codebox = document.querySelector('.codebox');\n    codebox.innerHTML = `mapName: <span>${mapID}</span>`;\n    codebox.querySelector('span').addEventListener('click', MapsConstructor.copyTextEventHandler);\n  }\n\n  buildCountriesList(map){\n    let df = document.createDocumentFragment();\n    map.features.forEach(feature=>{\n      let p = feature.properties,\n          row = MapsConstructor.createElement('tr');\n      df.appendChild(row);\n      let cb = document.createElement('input');\n      cb.type = 'checkbox';\n      cb.value = p['hc-key'];\n      cb.style.display = 'none';\n      row.appendChild(MapsConstructor.createElement('td',p['name']));\n      row.firstChild.insertBefore(cb,row.firstChild.firstChild);\n      let key = MapsConstructor.createElement('td',p['hc-key'])\n      row.appendChild(key);\n      key.addEventListener('click', MapsConstructor.copyTextEventHandler);\n      row.appendChild(MapsConstructor.createElement('td',p['subregion']));\n      row.appendChild(MapsConstructor.createElement('td',p['region-wb']));\n    });\n    this.countriesList.querySelector('tbody').appendChild(df);\n  }\n\n  clearCountriesList(){\n    this.countriesList.querySelector('tbody').innerHTML = '';\n  }\n\n  static createElement(tag,text){\n    let el = document.createElement(tag);\n    if(text){\n      el.textContent = text;\n    }\n    return el\n  }\n\n  static getMapID(href){\n    return href.split(\"mapdata/\")[1].split('.')[0];\n  }\n\n  fakeXHR(url){\n    let mapID = this.constructor.getMapID(url),\n        hm=this.hm;\n    return new Promise((resolve,reject)=>{\n      if(!this.hm[mapID]){\n        let script = document.createElement('script'),\n            head = document.querySelector('head');\n        script.addEventListener('load',getContents);\n        function getContents(e){\n          script.removeEventListener('load',getContents);\n          head.removeChild(script);\n          resolve(hm[mapID]);\n        }\n        script.src = url;\n        head.appendChild(script);\n      } else {\n        resolve(hm[mapID])\n      }\n    });\n  }\n\n  clearMapsList(){\n    if(this.mapsList.children.length>0){\n      [].slice.call(this.mapsList.querySelectorAll('input[type=radio]')).forEach(cb=>cb.removeEventListener('change',this.processMap));\n      this.mapsList.innerHTML='';\n\n    }\n  }\n}\nexport default MapsConstructor\n\nwindow.Reportal = window.Reportal || {};\nReportalBase.mixin(window.Reportal,{\n  MapsConstructor\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/constructor/maps-constructor.js","class ReportalBase {\n\n  /**\n   * Copies props from a source object to a target object.\n   *\n   * Note, this method uses a simple `for...in` strategy for enumerating\n   * properties.  To ensure only `ownProperties` are copied from source\n   * to target and that accessor implementations are copied, use `extend`.\n   *\n   * @method mixin\n   * @param {Object} target Target object to copy properties to.\n   * @param {Object} source Source object to copy properties from.\n   * @return {Object} Target object that was passed as first argument.\n   */\n  static mixin(target, source) {\n    for (var i in source) {\n      target[i] = source[i];\n    }\n    return target;\n  }\n\n  static _logger(level, args) {\n    // accept ['foo', 'bar'] and [['foo', 'bar']]\n    if (args.length === 1 && Array.isArray(args[0])) {\n      args = args[0];\n    }\n    // only accept logging functions\n    switch(level) {\n      case 'log':\n      case 'warn':\n      case 'error':\n        console[level].apply(console, args);\n        break;\n    }\n  }\n\n  static _log() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this._logger('log', args);\n  }\n\n  static _warn() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this._logger('warn', args);\n  }\n\n  static _error() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this._logger('error', args);\n  }\n\n  /**\n   * Creates a named event with `name`\n   * @param {String} name - name of the event\n   * @return {Event} Returns a created event\n   * */\n  static newEvent(name){\n    var event = document.createEvent('Event');\n    event.initEvent(name, true, true);\n    return event;\n  }\n\n  /**\n   * Inspects if the current string might be converted to number and renders it as number. If string length is 0, returns `null`. If none applies returns the string as is.\n   * @param {String} str - value of the cell if not HTML contents\n   * @return {Number|null|String}\n   * */\n  static isNumber(str){\n    if(!isNaN(parseFloat(str))){\n      str = str.replace(/,/i,'');// remove unnecessary comma as a delimiter for thousands from data.\n      return parseFloat(str);\n    } else if(str.length==0){return null} else {return str}\n  }\n\n\n  /**\n   * Creates an XHR wrapped in a Promise\n   * @param {!String} URL - url to send a `GET` request to\n   * @return {Promise} Returns a then-able promise with `XMLHttpRequest.responseText`\n   * */\n  static promiseRequest(URL){\n    return new Promise((resolve,reject)=>{\n      let xhr = new XMLHttpRequest();\n      xhr.open('GET', URL, true);\n      xhr.onload = e=>{xhr.status == 200?resolve(xhr.responseText):reject(Error(`${xhr.status}: ${xhr.statusText}`));}\n      xhr.onerror = e=>{reject(e)}\n      xhr.send();\n    });\n  }\n\n  /**\n   * Gets a variable listed in query string\n   * @param {!String} variable - variable name to get value for\n   * @param {String=} [query=window.location.search.substring(1)] - the query string to search variable for in\n   * @return {String} Returns value for the variable\n   * */\n  static getQueryVariable(variable,query=window.location.search.substring(1)){\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n      var pair = vars[i].split(\"=\");\n      if((pair[0]).toLowerCase() == variable.toLowerCase()){return pair[1];}\n    }\n    return null;\n  }\n\n}\nexport default ReportalBase\n\n\n\n// WEBPACK FOOTER //\n// ./~/r-reportal-base/src/reportal-base.js"],"sourceRoot":""}